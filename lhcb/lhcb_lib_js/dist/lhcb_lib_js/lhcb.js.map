{"version":3,"sources":["../../lhcb.js"],"names":["mid","LHCB","l","Logger","d","arguments","host","port","LHCBBroker","LHCBClient","ws","WebSocket","name","Promise","resolve","request","jsonRequest","JSON","stringify","onmessage","msg","response","parse","data","send","client","funcName","args","broker","ready","type","value","onopen","localWs","readyState","OPEN","read","execute","obj","constructor","method","Function","self","console","debug","apply","Object","getOwnPropertyNames","getPrototypeOf","c","prefix","log","info","warn","error","window"],"mappings":"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","file":"lhcb.js","sourcesContent":["/*\n * Copyright [2015-2017] Fraunhofer Gesellschaft e.V., Institute for\n * Open Communication Systems (FOKUS)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nlet mid = 0;\n\nclass LHCB {\n    constructor() {\n        this.l = new Logger(this);\n        this.l.d(\"Creating new LHCB Lib from:\", arguments);\n    }\n\n    getBroker(host, port) {\n        return new LHCBBroker(host, port);\n    }\n\n    getLocalClient() {\n        return new LHCBClient();\n    }\n}\n\nclass LHCBBroker {\n    constructor(host, port) {\n        this.l = new Logger(this);\n        this.l.d(\"Creating new LHCB Broker from:\", arguments);\n        this.ws = new WebSocket(\"wss://\" + host + \":\" + port + \"/ws\");\n        this.l.d(\"Created WebSocket:\", this.ws);\n    }\n\n    read(name) {\n        return new Promise((resolve) => {\n            this.l.d(\"Running 'read' Promise\");\n\n            let request = {\"type\": \"read\", \"client\": name};\n            let jsonRequest = JSON.stringify(request);\n            this.ws.onmessage = (msg) => {\n                let response = JSON.parse(msg.data);\n                this.l.d(\"Got response for \" + jsonRequest + \":\", JSON.stringify(response, null, 2));\n                resolve(response);\n            };\n            this.l.d(\"Sending request:\", jsonRequest);\n            this.ws.send(jsonRequest);\n        });\n    }\n\n    execute(client, funcName, args) {\n\n        return new Promise((resolve) => {\n            this.l.d(\"Running 'execute' Promise\");\n\n            let request = {\"type\": \"execute\", \"client\": client, \"value\": {\"name\": funcName, \"args\": args}};\n            let jsonRequest = JSON.stringify(request);\n            this.ws.onmessage = (msg) => {\n                let response = JSON.parse(msg.data);\n                this.l.d(\"Got response for \" + jsonRequest + \":\", JSON.stringify(response, null, 2));\n                resolve(response);\n            };\n            this.l.d(\"Sending request:\", jsonRequest);\n            this.ws.send(jsonRequest);\n        })\n    }\n\n    getRemoteClient(name) {\n        return new LHCBClient(this, name);\n    }\n}\n\nclass LHCBClient {\n    constructor(broker, name) {\n        this.l = new Logger(this);\n        this.l.d(\"Creating new LHCB Client from:\", arguments);\n\n        this.ready = false;\n        if (!broker || !name) {\n            this.l.d(\"Unspecified Broker or Name, trying to connect locally AND get BrokerInfo\");\n            let ws = new WebSocket(\"wss://localhost:9443/ws\");\n\n            let request = {\n                \"type\": \"execute\", \"mid\": mid++, \"value\": {\n                    \"name\": \"getBrokerInfo\"\n                }\n            };\n            let jsonRequest = JSON.stringify(request);\n            ws.onmessage = (msg) => {\n                let response = JSON.parse(msg.data);\n                this.l.d(\"Got response for \" + jsonRequest + \":\", JSON.stringify(response, null, 2));\n                if (response.type == \"response\") {\n                    this.name = response.value.name;\n                    this.broker = new LHCBBroker(response.value.host, response.value.port);\n                    this.ready = true;\n                }\n            };\n            ws.onopen = () => {\n                this.l.d(\"WebSocket open\");\n                this.l.d(\"Sending request:\", jsonRequest);\n                ws.send(jsonRequest);\n            };\n            this.localWs = ws;\n        } else {\n            this.l.d(\"Broker and Name specified, communicating exclusively through Broker\");\n            this.broker = broker;\n            this.name = name;\n            this.ready = true;\n        }\n    }\n\n    isReady() {\n        return this.ready;\n    }\n\n    read() {\n        if (this.localWs && this.localWs.readyState == WebSocket.OPEN) {\n            this.l.d(\"Local WebSocket is open, reading locally...\");\n            return new Promise((resolve) => {\n                this.l.d(\"Running 'read' Promise\");\n\n                let request = {\"type\": \"read\"};\n                let jsonRequest = JSON.stringify(request);\n                this.localWs.onmessage = (msg) => {\n                    let response = JSON.parse(msg.data);\n                    this.l.d(\"Got response for \" + jsonRequest + \":\", JSON.stringify(response, null, 2));\n                    resolve(response);\n                };\n                this.l.d(\"Sending request:\", jsonRequest);\n                this.localWs.send(jsonRequest);\n            })\n        } else {\n            this.l.d(\"No local WebSocket connection to LHCB Client -> Reading via Broker...\");\n            return this.broker.read(this.name);\n        }\n    }\n\n    execute(funcName, args) {\n        if (this.localWs && this.localWs.readyState == WebSocket.OPEN) {\n            this.l.d(\"Local WebSocket is open, executing locally...\");\n            return new Promise((resolve) => {\n                this.l.d(\"Running 'execute' Promise\");\n\n                let request = {\"type\": \"execute\", \"value\": {\"name\": funcName, \"args\": args}};\n                let jsonRequest = JSON.stringify(request);\n                this.localWs.onmessage = (msg) => {\n                    let response = JSON.parse(msg.data);\n                    this.l.d(\"Got response for \" + jsonRequest + \":\", JSON.stringify(response, null, 2));\n                    resolve(response);\n                };\n                this.l.d(\"Sending request:\", jsonRequest);\n                this.localWs.send(jsonRequest);\n            });\n        } else {\n            this.l.d(\"No local WebSocket connection to LHCB Client -> Executing via Broker...\");\n            return this.broker.execute(this.name, funcName, args);\n        }\n    }\n\n    getBroker() {\n        return this.broker;\n    }\n\n    getName() {\n        return this.name;\n    }\n}\n\n/**\n * Simple class for easier logging\n */\nclass Logger {\n    constructor(obj) {\n        this.name = obj.constructor.name;\n        // console.debug(\"Setting up Logger for\", this.name);\n        for (let name of Object.getOwnPropertyNames(Object.getPrototypeOf(obj))) {\n            let method = obj[name];\n            // Supposedly you'd like to skip constructor\n            if (!(method instanceof Function) || method === obj) continue;\n            // console.log(\"injecting logger into\", name);\n            let self = this;\n            obj[name] = function () {\n                console.debug(self.name + \".\" + name + \"():\", arguments);\n                return method.apply(obj, arguments);\n            }\n        }\n        this.c = console;\n    }\n\n    d(msg, ...args) {\n        arguments[0] = this.name + \": \" + arguments[0];\n        this.c.debug.apply(this.c, arguments);\n    }\n\n    l(msg, ...args) {\n        arguments[0] = this.prefix + arguments[0];\n        this.c.log.apply(this.c, arguments);\n    }\n\n    i(msg, ...args) {\n        arguments[0] = this.prefix + arguments[0];\n        this.c.info.apply(this.c, arguments);\n    }\n\n    w(msg, ...args) {\n        arguments[0] = this.prefix + arguments[0];\n        this.c.warn.apply(this.c, arguments);\n    }\n\n    e(msg, ...args) {\n        arguments[0] = this.prefix + arguments[0];\n        this.c.error.apply(this.c, arguments);\n    }\n}\n\nwindow.LHCB = new LHCB();\n\n// export default LHCB;"]}